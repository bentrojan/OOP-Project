var search_data = {"index":{"searchIndex":["game","board","player","assign_box()","cat_game?()","draw_cat()","new()","new()","new()","play()","sample_board()","turn()","view_board()","winner?()"],"longSearchIndex":["game","game::board","game::player","game::board#assign_box()","game::board#cat_game?()","game#draw_cat()","game::new()","game::board::new()","game::player::new()","game#play()","game::board#sample_board()","game#turn()","game::board#view_board()","game::board#winner?()"],"info":[["Game","","Game.html","",""],["Game::Board","","Game/Board.html","","<p>controls the gaming board\n"],["Game::Player","","Game/Player.html","","<p>holds X or O and interacts with Board through Game\n"],["assign_box","Game::Board","Game/Board.html#method-i-assign_box","(box, xoro)","<p>assigns X or O to a box - checks box is vacant and number is 1-9\n"],["cat_game?","Game::Board","Game/Board.html#method-i-cat_game-3F","()","<p>checks for a draw\n"],["draw_cat","Game","Game.html#method-i-draw_cat","()","<p>&#39;draws&#39; a cat when thre is a &#39;draw&#39;\n"],["new","Game","Game.html#method-c-new","()","<p>initializes a board and two players\n"],["new","Game::Board","Game/Board.html#method-c-new","()","<p>initializes the board with a 9-place array, each with value “ ” to be\nadjusted later\n"],["new","Game::Player","Game/Player.html#method-c-new","(xoro)","<p>identifies the player as the X or the O\n"],["play","Game","Game.html#method-i-play","()","<p>plays the game\n"],["sample_board","Game::Board","Game/Board.html#method-i-sample_board","()","<p>draws a sample board, to show 1-9 locations\n"],["turn","Game","Game.html#method-i-turn","()","<p>player_number even is X&#39;s turn, odd is O&#39;s turn\n"],["view_board","Game::Board","Game/Board.html#method-i-view_board","()","<p>draws the board\n"],["winner?","Game::Board","Game/Board.html#method-i-winner-3F","()","<p>checks for winning move 123, 147, 159, 789, 369, 357, 258, 456\n"]]}}